<?php

use Illuminate\Database\Migrations\Migration;
use Illuminate\Database\Schema\Blueprint;
use Illuminate\Support\Facades\Schema;

return new class extends Migration
{
    /**
     * Run the migrations.
     */
    public function up(): void
    {
        Schema::dropIfExists('invoices');
        Schema::dropIfExists('invoices_discount');
        Schema::dropIfExists('invoice_items');
        Schema::dropIfExists('invoice_items_discount');
        Schema::create('invoices', function (Blueprint $table) {
            $table->unsignedInteger('id')->autoIncrement();
            $table->unsignedInteger('sync_invoice_id');
            $table->unsignedInteger('client_id');
            $table->unsignedInteger('user_id');
            $table->integer('real_user_id')->nullable();
            $table->string('real_user_name', 255)->nullable();
            $table->integer('employee_id')->nullable();
            $table->string('employee_name', 255)->nullable();
            $table->unsignedInteger('account_id');
            $table->tinyInteger('is_public')->default(0)->nullable();
            $table->string('client_type', 50)->nullable();
            $table->string('price_type', 50)->nullable();
            $table->string('client_phone', 255)->nullable();
            $table->string('client_name', 255)->nullable();
            $table->unsignedInteger('invoice_status_id')->default('1');
            $table->timestamp('created_at')->nullable();
            $table->timestamp('updated_at')->nullable();
            $table->timestamp('deleted_at')->nullable();
            $table->string('invoice_number', 255);
            $table->integer('billing_id')->nullable();
            $table->double('discount', 8, 2);
            $table->decimal('discount_percent', 12, 2)->default(0.00)->nullable();
            $table->decimal('discount_points', 12, 2)->default(0.00)->nullable();
            $table->decimal('discount_vouchers', 12, 2)->default(0.00);
            $table->string('po_number', 255);
            $table->date('invoice_date')->nullable();
            $table->string('payment_date', 255)->nullable();
            $table->date('due_date')->nullable();
            $table->text('terms');
            $table->text('public_notes');
            $table->tinyInteger('is_deleted')->default(0);
            $table->tinyInteger('is_recurring')->default(0);
            $table->unsignedInteger('frequency_id');
            $table->date('start_date')->nullable();
            $table->date('end_date')->nullable();
            $table->date('last_sent_date')->nullable();
            $table->unsignedInteger('recurring_invoice_id')->nullable();
            $table->string('tax_name1', 255);
            $table->decimal('tax_rate1', 13, 3);
            $table->decimal('total_cost', 12, 2)->default(0.00)->nullable();
            $table->decimal('subtotal', 12, 2)->nullable();
            $table->decimal('total', 12, 2)->nullable();
            $table->decimal('oil', 12, 2)->default(0.00)->nullable();
            $table->decimal('amount', 13, 2)->default(0.00);
            $table->decimal('balance', 13, 2)->default(0.00);
            $table->decimal('oil_amount', 12, 2)->default(0.00)->nullable();
            $table->decimal('replacement_amount', 12, 2)->default(0.00)->nullable();
            $table->decimal('oil_balance', 12, 2)->default(0.00)->nullable();
            $table->decimal('replacement_balance', 12, 2)->default(0.00)->nullable();
            $table->decimal('invoice_items_amount', 12, 2)->default(0.00)->nullable();
            $table->decimal('total_refunded', 12, 2)->default(0.00)->nullable();
            $table->decimal('store_credit', 12, 2)->default(0.00)->nullable();
            $table->decimal('commission', 12, 2)->default(0.00)->nullable();
            $table->decimal('commission_global', 12, 2)->default(0.00)->nullable();
            $table->unsignedInteger('public_id');
            $table->unsignedInteger('invoice_design_id')->default('1');
            $table->tinyInteger('invoice_type_id')->default(0);
            $table->string('quote_number', 50)->nullable();
            $table->unsignedInteger('quote_id')->nullable();
            $table->integer('supply_id')->nullable();
            $table->integer('request_id')->nullable();
            $table->unsignedInteger('quote_invoice_id')->nullable();
            $table->decimal('custom_value1', 13, 2)->default(0.00);
            $table->decimal('custom_value2', 13, 2)->default(0.00);
            $table->tinyInteger('custom_taxes1')->default(0);
            $table->tinyInteger('custom_taxes2')->default(0);
            $table->tinyInteger('is_amount_discount')->nullable();
            $table->text('invoice_footer')->nullable();
            $table->decimal('partial', 13, 2)->nullable();
            $table->tinyInteger('has_tasks')->default(0);
            $table->tinyInteger('auto_bill')->default(0);
            $table->string('custom_text_value1', 255)->nullable();
            $table->string('custom_text_value2', 255)->nullable();
            $table->tinyInteger('has_expenses')->default(0);
            $table->string('tax_name2', 255)->nullable();
            $table->decimal('tax_rate2', 13, 3);
            $table->tinyInteger('client_enable_auto_bill')->default(0);
            $table->integer('seller_id')->default(1);
            $table->integer('mechanic_id')->nullable();
            $table->integer('auxiliar_id')->nullable();
            $table->integer('in_transit')->default(0)->nullable();
            $table->tinyInteger('is_credit')->default(0)->nullable();
            $table->integer('credit_days')->nullable();
            $table->date('date_changed_credit')->nullable();
            $table->tinyInteger('tax_detailed')->default(0)->nullable();
            $table->integer('cash_count_id')->nullable();
            $table->tinyInteger('commission_paid')->default(0)->nullable();
            $table->tinyInteger('commission_counted')->default(0)->nullable();
            $table->tinyInteger('save_points')->default(0)->nullable();
            $table->integer('points')->default(0)->nullable();
            $table->date('last_payment_date')->nullable();
            $table->text('post_data')->nullable();
            $table->integer('is_full_refund');
            $table->tinyInteger('save_vouchers')->default(0)->nullable();
            $table->decimal('amount_kms', 12, 2)->default(0.00)->nullable();
            $table->unsignedInteger('packing_id')->default('0');

            $table->unique(['account_id', 'public_id'], 'invoice_account_id_public_id_unique');
            $table->unique(['billing_id', 'invoice_number'], 'unique_invoice');
        });
        Schema::create('invoice_items', function (Blueprint $table) {
            $table->unsignedInteger('id')->autoIncrement();
            $table->unsignedInteger('sync_invoice_items_id');
            $table->unsignedInteger('account_id');
            $table->unsignedInteger('user_id');
            $table->unsignedInteger('invoice_id');
            $table->unsignedInteger('product_id')->nullable();
            $table->timestamps();
            $table->softDeletes();
            $table->string('product_key', 255);
            $table->text('notes');
            $table->decimal('product_cost', 12, 2)->nullable();
            $table->decimal('product_price', 12, 2)->nullable();
            $table->decimal('cost', 13, 2);
            $table->integer('qty')->nullable();
            $table->decimal('total', 12, 2)->default(0.00)->nullable();
            $table->integer('qty_refunded')->default(0)->nullable();
            $table->decimal('total_refunded', 12, 2)->default(0.00)->nullable();
            $table->decimal('commission', 12, 2)->default(0.00)->nullable();
            $table->decimal('commission_global', 12, 2)->default(0.00)->nullable();
            $table->decimal('commission_percent', 12, 2)->nullable();
            $table->decimal('commission_percent_global', 12, 2)->nullable();
            $table->string('tax_name1', 255)->nullable();
            $table->decimal('tax_rate1', 13, 3)->nullable();
            $table->unsignedInteger('public_id');
            $table->string('custom_value1', 255)->nullable();
            $table->string('custom_value2', 255)->nullable();
            $table->string('tax_name2', 255)->nullable();
            $table->decimal('tax_rate2', 13, 3)->nullable();
            $table->string('price_type', 50)->nullable();
            $table->tinyInteger('stock_updated')->default(0)->nullable();
            $table->integer('invoice_type_id')->nullable();
            $table->unique(['account_id', 'public_id']);
        });
        Schema::create('invoices_discount', function (Blueprint $table) {
            $table->unsignedInteger('id')->autoIncrement();
            $table->unsignedInteger('invoice_id');
            $table->unsignedInteger('client_id');
            $table->unsignedInteger('user_id');
            $table->integer('real_user_id')->nullable();
            $table->string('real_user_name', 255)->nullable();
            $table->integer('employee_id')->nullable();
            $table->string('employee_name', 255)->nullable();
            $table->unsignedInteger('account_id');
            $table->tinyInteger('is_public')->default(0)->nullable();
            $table->string('client_type', 50)->nullable();
            $table->string('price_type', 50)->nullable();
            $table->string('client_phone', 255)->nullable();
            $table->string('client_name', 255)->nullable();
            $table->unsignedInteger('invoice_status_id')->default('1');
            $table->timestamp('created_at')->nullable();
            $table->timestamp('updated_at')->nullable();
            $table->timestamp('deleted_at')->nullable();
            $table->string('invoice_number', 255);
            $table->integer('billing_id')->nullable();
            $table->double('discount', 8, 2);
            $table->decimal('discount_percent', 12, 2)->default(0.00)->nullable();
            $table->decimal('discount_points', 12, 2)->default(0.00)->nullable();
            $table->decimal('discount_vouchers', 12, 2)->default(0.00);
            $table->string('po_number', 255);
            $table->date('invoice_date')->nullable();
            $table->string('payment_date', 255)->nullable();
            $table->date('due_date')->nullable();
            $table->text('terms');
            $table->text('public_notes');
            $table->tinyInteger('is_deleted')->default(0);
            $table->tinyInteger('is_recurring')->default(0);
            $table->unsignedInteger('frequency_id');
            $table->date('start_date')->nullable();
            $table->date('end_date')->nullable();
            $table->date('last_sent_date')->nullable();
            $table->unsignedInteger('recurring_invoice_id')->nullable();
            $table->string('tax_name1', 255);
            $table->decimal('tax_rate1', 13, 3);
            $table->decimal('total_cost', 12, 2)->default(0.00)->nullable();
            $table->decimal('subtotal', 12, 2)->nullable();
            $table->decimal('total', 12, 2)->nullable();
            $table->decimal('oil', 12, 2)->default(0.00)->nullable();
            $table->decimal('amount', 13, 2)->default(0.00);
            $table->decimal('balance', 13, 2)->default(0.00);
            $table->decimal('oil_amount', 12, 2)->default(0.00)->nullable();
            $table->decimal('replacement_amount', 12, 2)->default(0.00)->nullable();
            $table->decimal('oil_balance', 12, 2)->default(0.00)->nullable();
            $table->decimal('replacement_balance', 12, 2)->default(0.00)->nullable();
            $table->decimal('invoice_items_amount', 12, 2)->default(0.00)->nullable();
            $table->decimal('total_refunded', 12, 2)->default(0.00)->nullable();
            $table->decimal('store_credit', 12, 2)->default(0.00)->nullable();
            $table->decimal('commission', 12, 2)->default(0.00)->nullable();
            $table->decimal('commission_global', 12, 2)->default(0.00)->nullable();
            $table->unsignedInteger('public_id');
            $table->unsignedInteger('invoice_design_id')->default('1');
            $table->tinyInteger('invoice_type_id')->default(0);
            $table->string('quote_number', 50)->nullable();
            $table->unsignedInteger('quote_id')->nullable();
            $table->integer('supply_id')->nullable();
            $table->integer('request_id')->nullable();
            $table->unsignedInteger('quote_invoice_id')->nullable();
            $table->decimal('custom_value1', 13, 2)->default(0.00);
            $table->decimal('custom_value2', 13, 2)->default(0.00);
            $table->tinyInteger('custom_taxes1')->default(0);
            $table->tinyInteger('custom_taxes2')->default(0);
            $table->tinyInteger('is_amount_discount')->nullable();
            $table->text('invoice_footer')->nullable();
            $table->decimal('partial', 13, 2)->nullable();
            $table->tinyInteger('has_tasks')->default(0);
            $table->tinyInteger('auto_bill')->default(0);
            $table->string('custom_text_value1', 255)->nullable();
            $table->string('custom_text_value2', 255)->nullable();
            $table->tinyInteger('has_expenses')->default(0);
            $table->string('tax_name2', 255)->nullable();
            $table->decimal('tax_rate2', 13, 3);
            $table->tinyInteger('client_enable_auto_bill')->default(0);
            $table->integer('seller_id')->default(1);
            $table->integer('mechanic_id')->nullable();
            $table->integer('auxiliar_id')->nullable();
            $table->integer('in_transit')->default(0)->nullable();
            $table->tinyInteger('is_credit')->default(0)->nullable();
            $table->integer('credit_days')->nullable();
            $table->date('date_changed_credit')->nullable();
            $table->tinyInteger('tax_detailed')->default(0)->nullable();
            $table->integer('cash_count_id')->nullable();
            $table->tinyInteger('commission_paid')->default(0)->nullable();
            $table->tinyInteger('commission_counted')->default(0)->nullable();
            $table->tinyInteger('save_points')->default(0)->nullable();
            $table->integer('points')->default(0)->nullable();
            $table->date('last_payment_date')->nullable();
            $table->text('post_data')->nullable();
            $table->integer('is_full_refund');
            $table->tinyInteger('save_vouchers')->default(0)->nullable();
            $table->decimal('amount_kms', 12, 2)->default(0.00)->nullable();
            $table->unsignedInteger('packing_id')->default('0');

            $table->unique(['account_id', 'public_id'], 'invoice_account_id_public_id_unique');
            $table->unique(['billing_id', 'invoice_number'], 'unique_invoice');
        });
        Schema::create('invoice_items_discount', function (Blueprint $table) {
            $table->unsignedInteger('id')->autoIncrement();
            $table->unsignedInteger('invoice_items_id');
            $table->unsignedInteger('account_id');
            $table->unsignedInteger('user_id');
            $table->unsignedInteger('invoice_id');
            $table->unsignedInteger('product_id')->nullable();
            $table->timestamps();
            $table->softDeletes();
            $table->string('product_key', 255);
            $table->text('notes');
            $table->decimal('product_cost', 12, 2)->nullable();
            $table->decimal('product_price', 12, 2)->nullable();
            $table->decimal('cost', 13, 2);
            $table->integer('qty')->nullable();
            $table->decimal('total', 12, 2)->default(0.00)->nullable();
            $table->integer('qty_refunded')->default(0)->nullable();
            $table->decimal('total_refunded', 12, 2)->default(0.00)->nullable();
            $table->decimal('commission', 12, 2)->default(0.00)->nullable();
            $table->decimal('commission_global', 12, 2)->default(0.00)->nullable();
            $table->decimal('commission_percent', 12, 2)->nullable();
            $table->decimal('commission_percent_global', 12, 2)->nullable();
            $table->string('tax_name1', 255)->nullable();
            $table->decimal('tax_rate1', 13, 3)->nullable();
            $table->unsignedInteger('public_id');
            $table->string('custom_value1', 255)->nullable();
            $table->string('custom_value2', 255)->nullable();
            $table->string('tax_name2', 255)->nullable();
            $table->decimal('tax_rate2', 13, 3)->nullable();
            $table->string('price_type', 50)->nullable();
            $table->tinyInteger('stock_updated')->default(0)->nullable();
            $table->integer('invoice_type_id')->nullable();
            $table->unique(['account_id', 'public_id']);
        });
    }

    /**
     * Reverse the migrations.
     */
    public function down(): void
    {
        Schema::dropIfExists('invoices');
        Schema::dropIfExists('invoices_discount');
        Schema::dropIfExists('invoice_items');
        Schema::dropIfExists('invoice_items_discount');
    }
};
